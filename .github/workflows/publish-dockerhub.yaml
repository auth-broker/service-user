name: Build & Publish Docker image

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]

concurrency:
  group: docker-${{ github.ref }}
  cancel-in-progress: true

jobs:
  docker:
    runs-on: ubuntu-latest
    environment: dockerhub
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Extract package name & version from pyproject.toml
        id: meta
        shell: bash
        run: |
          set -euo pipefail
          read -r NAME VERSION <<< "$(python -c "import tomllib, pathlib, sys; d=tomllib.loads(pathlib.Path('pyproject.toml').read_text(encoding='utf-8')); p=d.get('project') or {}; n=p.get('name'); v=p.get('version'); sys.exit('Missing project.name or project.version') if not (n and v) else print(n, v)")"
          NAME_LC="$(printf '%s' "$NAME" | tr '[:upper:]' '[:lower:]')"
          echo "name=${NAME_LC}" >> "$GITHUB_OUTPUT"
          echo "version=${VERSION}" >> "$GITHUB_OUTPUT"
          echo "Package: ${NAME_LC}"
          echo "Version: ${VERSION}"

      - uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub (push to main only)
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/heads/main')
        uses: docker/login-action@v3
        with:
          username: mattcoulter7
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build (PR) or Build & Push (main)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/heads/main') }}
          tags: |
            mattcoulter7/${{ steps.meta.outputs.name }}:${{ steps.meta.outputs.version }}
            mattcoulter7/${{ steps.meta.outputs.name }}:latest
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.version=${{ steps.meta.outputs.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
